{
  "hash": "71d84ba30eab3b4cc3fc05e6525870c3",
  "result": {
    "markdown": "---\ntitle: \"spotify analysis\"\nauthor: \"Eddie Eforo\"\ndate: \"2023-12-9\"\ncategories: [news]\n---\n\n\n\n\nThe following statistics and data visualizations are obtained through the data frame \"Spotify All\" and provide informative and interesting information about Spotify.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspotify_all <- read.csv(\"https://bcdanl.github.io/data/spotify_all.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nskimr::skim(spotify_all)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |            |\n|:------------------------|:-----------|\n|Name                     |spotify_all |\n|Number of rows           |198005      |\n|Number of columns        |7           |\n|_______________________  |            |\n|Column type frequency:   |            |\n|character                |4           |\n|numeric                  |3           |\n|________________________ |            |\n|Group variables          |None        |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|playlist_name |         0|             1|   2|  55|     0|     2184|          0|\n|artist_name   |         0|             1|   1| 117|     0|    18866|          0|\n|track_name    |         0|             1|   1| 216|     0|    64115|          0|\n|album_name    |         0|             1|   1| 255|     0|    35497|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|      mean|        sd| p0|    p25|    p50|    p75|     p100|hist  |\n|:-------------|---------:|-------------:|---------:|---------:|--:|------:|------:|------:|--------:|:-----|\n|pid           |         0|             1| 323435.50| 466890.21|  0|    738|   1476| 999210|   999998|▇▁▁▁▃ |\n|pos           |         0|             1|     54.39|     48.35|  0|     17|     40|     79|      248|▇▃▂▁▁ |\n|duration_ms   |         0|             1| 234740.84| 132918.60|  0| 198000| 224693| 258533| 20744575|▇▁▁▁▁ |\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_artist <- spotify_all %>%\n  group_by(artist_name) %>%\n  summarize(artist_count = n()) %>%\n  arrange(desc(artist_count)) %>%\n  head(top_artist, n =10)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_artist\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   artist_name      artist_count\n   <chr>                   <int>\n 1 Drake                    2715\n 2 Kanye West               1065\n 3 Kendrick Lamar           1035\n 4 Rihanna                   915\n 5 The Weeknd                913\n 6 Future                    784\n 7 Eminem                    760\n 8 Lil Uzi Vert              728\n 9 Ed Sheeran                719\n10 The Chainsmokers          642\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(spotify_all %>% filter(artist_name %in% top_artist$artist_name), aes(x = pos, fill = artist_name)) + \n  geom_bar(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](spotifyQMD_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "spotifyQMD_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}