{
  "hash": "1aa0d12448750dc13d302a03ea758904",
  "result": {
    "markdown": "---\ntitle: \"Beer!\"\nauthor: \"Eddie Eforo\"\ndate: \"2023-12-9\"\nimage: IMG_31209.jpg\nimage-width: 15em\nimage-height: 15em\ncategories: [news]\n---\n\n\n\nOh this is actually pretty cool, I am writing code for the website that I made in class about a data frame that's pretty awesome... Beer! still figuring it out but the following statistics crome from the data frame \"https://bcdanl.github.io/data/beer_markets.csv\" describing difference beer brands and their quantity and populartity amoung different markets.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbeer_mkts <- read.csv(\"https://bcdanl.github.io/data/beer_markets.csv\")\n```\n:::\n\n\nVariable Description\nhh`: an identifier of the household;\nX_purchase_desc`: details on the purchased item;\nquantity`: the number of items purchased;\nbrand`: Bud Light, Busch Light, Coors Light, Miller Lite, or Natural Light;\ndollar_spent`: total dollar value of purchase;\nbeer_floz`: total volume of beer, in fluid ounces;\nprice_per_floz`: price per fl.oz. (i.e., beer spent/beer floz);\ncontainer`: the type of container;\npromo`: Whether the item was promoted (coupon or otherwise);\nmarket`: Scan-track market (or state if rural);\ndemographic data, including gender, marital status, household income, class of work, race, education, age, the size of household, and whether or not the household has a microwave or a dishwasher.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskimr::skim(beer_mkts)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |          |\n|:------------------------|:---------|\n|Name                     |beer_mkts |\n|Number of rows           |73115     |\n|Number of columns        |24        |\n|_______________________  |          |\n|Column type frequency:   |          |\n|character                |13        |\n|logical                  |6         |\n|numeric                  |5         |\n|________________________ |          |\n|Group variables          |None      |\n\n\n**Variable type: character**\n\n|skim_variable   | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:---------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|X_purchase_desc |         0|             1|  12|  29|     0|      115|          0|\n|brand           |         0|             1|   9|  13|     0|        5|          0|\n|container       |         0|             1|   3|  30|     0|        7|          0|\n|market          |         0|             1|   5|  20|     0|       92|          0|\n|buyertype       |         0|             1|   4|   7|     0|        3|          0|\n|income          |         0|             1|   5|   8|     0|        5|          0|\n|age             |         0|             1|   3|   5|     0|        4|          0|\n|employment      |         0|             1|   4|   4|     0|        3|          0|\n|degree          |         0|             1|   2|   7|     0|        4|          0|\n|cow             |         0|             1|   4|  25|     0|        4|          0|\n|race            |         0|             1|   5|   8|     0|        5|          0|\n|tvcable         |         0|             1|   4|   7|     0|        3|          0|\n|npeople         |         0|             1|   1|   5|     0|        5|          0|\n\n\n**Variable type: logical**\n\n|skim_variable    | n_missing| complete_rate| mean|count                  |\n|:----------------|---------:|-------------:|----:|:----------------------|\n|promo            |         0|             1| 0.20|FAL: 58563, TRU: 14552 |\n|childrenUnder6   |         0|             1| 0.07|FAL: 68109, TRU: 5006  |\n|children6to17    |         0|             1| 0.20|FAL: 58155, TRU: 14960 |\n|microwave        |         0|             1| 0.99|TRU: 72676, FAL: 439   |\n|dishwasher       |         0|             1| 0.73|TRU: 53258, FAL: 19857 |\n|singlefamilyhome |         0|             1| 0.81|TRU: 59058, FAL: 14057 |\n\n\n**Variable type: numeric**\n\n|skim_variable  | n_missing| complete_rate|        mean|          sd|         p0|        p25|        p50|         p75|        p100|hist  |\n|:--------------|---------:|-------------:|-----------:|-----------:|----------:|----------:|----------:|-----------:|-----------:|:-----|\n|hh             |         0|             1| 17407721.61| 11582147.34| 2000235.00| 8223438.00| 8413624.00| 30171315.00| 30440718.00|▂▇▁▁▇ |\n|quantity       |         0|             1|        1.32|        1.15|       1.00|       1.00|       1.00|        1.00|       48.00|▇▁▁▁▁ |\n|dollar_spent   |         0|             1|       13.78|        8.72|       0.51|       8.97|      12.99|       16.38|      159.13|▇▁▁▁▁ |\n|beer_floz      |         0|             1|      265.93|      199.52|      12.00|     144.00|     216.00|      360.00|     9216.00|▇▁▁▁▁ |\n|price_per_floz |         0|             1|        0.06|        0.01|       0.00|       0.05|       0.06|        0.06|        0.23|▃▇▁▁▁ |\n:::\n:::\n\n\nThe above is basic summery statistics prior to data transformation. \n\nAfter using functions to transform the code we can find more informative and helpful statistics that are more helpful.\n\n \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.4\n✔ ggplot2   3.4.3     ✔ stringr   1.5.0\n✔ lubridate 1.9.2     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nbeer_mkts %>%\n  group_by(market) %>%\n  summarise(total_floz = sum(beer_floz)) %>%\n  arrange(desc(total_floz)) %>%\n  slice_head(n = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  market      total_floz\n  <chr>            <dbl>\n1 TAMPA           890418\n2 PHOENIX         675318\n3 MIAMI           632684\n4 SAN ANTONIO     631852\n5 CHICAGO         558878\n```\n:::\n:::\n\nHere are the top five markets for beer in the united states. it makes sence that the biggest markets are fun citys, with the accept ion of Chicago... they drink becasue their pizza is weird and their Bears fans.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbeer_mkts %>%\n  group_by(brand, market) %>%\n  summarise(total_floz = sum(beer_floz)) %>%\n  arrange(brand, desc(total_floz)) %>%\n  slice_head(n = 5) %>% \n  print(n=25)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'brand'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 25 × 3\n# Groups:   brand [5]\n   brand         market          total_floz\n   <chr>         <chr>                <dbl>\n 1 BUD LIGHT     PHOENIX             271012\n 2 BUD LIGHT     TAMPA               171830\n 3 BUD LIGHT     MIAMI               152990\n 4 BUD LIGHT     ST. LOUIS           140982\n 5 BUD LIGHT     CHARLOTTE           136786\n 6 BUSCH LIGHT   RURAL IOWA          184000\n 7 BUSCH LIGHT   HOUSTON             154896\n 8 BUSCH LIGHT   CHICAGO             118916\n 9 BUSCH LIGHT   TAMPA               110680\n10 BUSCH LIGHT   MINNEAPOLIS          92992\n11 COORS LIGHT   TAMPA               146260\n12 COORS LIGHT   RURAL TEXAS         139662\n13 COORS LIGHT   SURBURBAN NY        127291\n14 COORS LIGHT   DENVER              101902\n15 COORS LIGHT   LOS ANGELES         101545\n16 MILLER LITE   CHICAGO             339984\n17 MILLER LITE   MIAMI               261624\n18 MILLER LITE   SAN ANTONIO         228088\n19 MILLER LITE   PHOENIX             194424\n20 MILLER LITE   RURAL WISCONSIN     169368\n21 NATURAL LIGHT TAMPA               311872\n22 NATURAL LIGHT SAN ANTONIO         159864\n23 NATURAL LIGHT DALLAS              151424\n24 NATURAL LIGHT DETROIT             129840\n25 NATURAL LIGHT LOS ANGELES         123372\n```\n:::\n:::\n\n\n\nThis shows the top five markets for each individual brand of beer, and it shows how all of Iowa drinks Busch light and nothing else.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}